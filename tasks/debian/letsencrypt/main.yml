---

- name: Apache | Debian | LetsEncrypt Certbot | Install package
  ansible.builtin.apt:
    name: "{{ packages.letsencrypt }}"
    state: present

- name: Apache | Debian | LetsEncrypt Certbot | Check if a apache virtualhost is available
  ansible.builtin.shell: 'ls /etc/apache2/sites-enabled/'
  register: enabled_apache_sites

- name: Apache | Debian | LetsEncrypt Certbot | Checking dependencies
  ansible.builtin.include_tasks: dependencies.yml
  when: enabled_apache_sites.stdout == ''

- name: Apache | Debian | LetsEncrypt Certbot | Processing apache sites
  ansible.builtin.include_tasks: domain.yml
  vars:
    site: "{{ default_site_config | combine(site_item, recursive=true) }}"
    name: "{{ site_item.key | safe_key }}"
  loop_control:
    loop_var: site_item
  with_dict: "{{ APACHE_CONFIG.sites }}"

- name: Apache | Debian | LetsEncrypt Certbot | Cleanup dependencies
  ansible.builtin.include_tasks: cleanup.yml

- name: Apache | Debian | LetsEncrypt Certbot | Adding systemd files for certbot renewal
  ansible.builtin.template:
    src: "templates/etc/systemd/system/{{ item }}.j2"
    dest: "/etc/systemd/system/{{ item }}"
  with_items:
    - 'ansibleguy.infra_apache.LetsEncryptCertbot.service'
    - 'ansibleguy.infra_apache.LetsEncryptCertbot.timer'

- name:  Apache | Debian | LetsEncrypt Certbot | Enabling cert-renewal systemd timer
  ansible.builtin.systemd:
    daemon_reload: yes
    name: 'LetsEncryptCertbot.timer'
    enabled: yes
    state: started
